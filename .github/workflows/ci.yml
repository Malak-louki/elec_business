# ==========================================================
# üîß GitHub Actions CI Workflow ‚Äì Elec Business
# Objectif :
#   1. D√©marrer un service MySQL (√©phem√®re)
#   2. Lancer Flyway + build + tests
#   3. G√©n√©rer le JAR et le publier comme artefact
# ==========================================================

name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch: # Permet de lancer manuellement

jobs:
  build-test:
    runs-on: ubuntu-latest  # Ex√©cute la CI sur une VM Linux propre

    # ------------------------
    # Variables d‚Äôenvironnement utilis√©es par Spring
    # ------------------------
    env:
      SPRING_DOCKER_COMPOSE_ENABLED: "false"   # D√©sactive le docker compose int√©gr√© de Spring Boot
      SPRING_PROFILES_ACTIVE: ci               # Active le profil application-ci.properties
      DB_NAME: elec_business
      DB_USER: ci_user
      DB_PASSWORD: ci_pwd
      DB_PORT: "3306"

    # ------------------------
    # D√©marrage du service MySQL pour les tests
    # ------------------------
    services:
      mysql:
        image: mysql:8.0.43
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: elec_business
          MYSQL_USER: ci_user
          MYSQL_PASSWORD: ci_pwd
          MYSQL_ROOT_PASSWORD: rootpwd
          TZ: Europe/Paris
        # Healthcheck = s'assure que MySQL est pr√™t avant le build
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=12

    steps:
      # 1 R√©cup√©ration du code source
      - name: Checkout
        uses: actions/checkout@v4

      # 2 Installation de Java 21 (avec cache Maven)
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      # 3 Attente active que MySQL soit pr√™t avant de lancer Maven
      - name: Wait for MySQL (extra safety)
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -P 3306 -u"$DB_USER" -p"$DB_PASSWORD" --silent && break
            echo "‚è≥ MySQL not ready yet..."; sleep 2
          done

      # 4 Correction du droit d'ex√©cution sur le wrapper Maven (important pour Ubuntu)
      - name: Grant execute permission for Maven Wrapper
        run: chmod +x mvnw

      # 5 Compilation + tests (unitaires + d‚Äôint√©gration)
      - name: Build & test (unit + integ)
        run: ./mvnw -q -DskipITs=false clean verify

      # 6 Package du JAR sans relancer les tests (gain de temps)
      - name: Package (skip tests)
        run: ./mvnw -q -DskipTests package

      # 7 Upload du JAR compil√© comme artefact t√©l√©chargeable
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: target/*.jar
